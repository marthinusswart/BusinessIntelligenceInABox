  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>ui-utils/build/ui-utils.min.js at gh-pages · angular-ui/ui-utils · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="assets" href="https://a248.e.akamai.net/assets.github.com/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="g4Jl3fXC8+7c3pt23XcCVAg5MOgiDxp8loabcL5dQts=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-6dd454fdb86cf3bd9a1044d7d0f63179100d0525.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-58b10e96bcdc3e0d5ea328ffcd01e36e2e8fd07e.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-4c434fa1705bf526e191eec0cd8fab1a5ce3e326.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-4d962942351f9bca93a4cc0818497ecb764bf2aa.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="67766df09e54c18702c5229297b15d13">

        <link data-pjax-transient rel='permalink' href='/angular-ui/ui-utils/blob/2ca294973bec5f94a013f17f54da8f1fa17c560e/build/ui-utils.min.js'>
    <meta property="og:title" content="ui-utils"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/angular-ui/ui-utils"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/46d07086561c66caae16ce4d96bfd345?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="angular-ui/ui-utils"/>

    <meta name="description" content="ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)" />


    <meta content="1530011" name="octolytics-dimension-user_id" /><meta content="angular-ui" name="octolytics-dimension-user_login" /><meta content="8419933" name="octolytics-dimension-repository_id" /><meta content="angular-ui/ui-utils" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="8419933" name="octolytics-dimension-repository_network_root_id" /><meta content="angular-ui/ui-utils" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/angular-ui/ui-utils/commits/gh-pages.atom" rel="alternate" title="Recent Commits to ui-utils:gh-pages" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob macintosh vis-public env-production  ">
    <div id="wrapper">

      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">Github</a>

    <div class="header-actions">
      <a class="button primary" href="/signup">Sign up</a>
      <a class="button" href="/login?return_to=%2Fangular-ui%2Fui-utils%2Fblob%2Fgh-pages%2Fbuild%2Fui-utils.min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
      data-repo="angular-ui/ui-utils"
      data-branch="gh-pages"
      data-sha="464e80b34b6670119fd07a54b10dc4c0c3f11ba0"
  >

    <input type="hidden" name="nwo" value="angular-ui/ui-utils" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>


      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              

<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Fangular-ui%2Fui-utils"
        class="minibutton with-count js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="octicon octicon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/angular-ui/ui-utils/stargazers">
        87
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Fangular-ui%2Fui-utils"
        class="minibutton with-count js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/angular-ui/ui-utils/network" class="social-count">
        57
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-octicon octicon-repo"></span>
                <span class="author vcard">
                  <a href="/angular-ui" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">angular-ui</span>
                  </a></span> /
                <strong><a href="/angular-ui/ui-utils" class="js-current-repository">ui-utils</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li class="pulse-nav"><a href="/angular-ui/ui-utils/pulse" class="js-selected-navigation-item " data-selected-links="pulse /angular-ui/ui-utils/pulse" rel="nofollow"><span class="octicon octicon-pulse"></span></a></li>
    <li><a href="/angular-ui/ui-utils/tree/gh-pages" class="js-selected-navigation-item selected" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /angular-ui/ui-utils/tree/gh-pages">Code</a></li>
    <li><a href="/angular-ui/ui-utils/network" class="js-selected-navigation-item " data-selected-links="repo_network /angular-ui/ui-utils/network">Network</a></li>
    <li><a href="/angular-ui/ui-utils/pulls" class="js-selected-navigation-item " data-selected-links="repo_pulls /angular-ui/ui-utils/pulls">Pull Requests <span class='counter'>3</span></a></li>

      <li><a href="/angular-ui/ui-utils/issues" class="js-selected-navigation-item " data-selected-links="repo_issues /angular-ui/ui-utils/issues">Issues <span class='counter'>14</span></a></li>



    <li><a href="/angular-ui/ui-utils/graphs" class="js-selected-navigation-item " data-selected-links="repo_graphs repo_contributors /angular-ui/ui-utils/graphs">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/angular-ui/ui-utils/tags" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_tags /angular-ui/ui-utils/tags">Tags <span class="counter ">3</span></a></li>
    </ul>
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="gh-pages">
        <span class="octicon octicon-git-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">gh-pages</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item selected">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/angular-ui/ui-utils/blob/gh-pages/build/ui-utils.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" rel="nofollow" title="gh-pages">gh-pages</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/angular-ui/ui-utils/blob/master/build/ui-utils.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/angular-ui/ui-utils/blob/v0.0.3/build/ui-utils.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.0.3" rel="nofollow" title="v0.0.3">v0.0.3</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/angular-ui/ui-utils/blob/v0.0.2/build/ui-utils.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.0.2" rel="nofollow" title="v0.0.2">v0.0.2</a>
                </div> <!-- /.select-menu-item -->
                <div class="select-menu-item js-navigation-item ">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/angular-ui/ui-utils/blob/v0.0.1/build/ui-utils.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.0.1" rel="nofollow" title="v0.0.1">v0.0.1</a>
                </div> <!-- /.select-menu-item -->
            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/angular-ui/ui-utils/tree/gh-pages" class="selected js-selected-navigation-item tabnav-tab" data-selected-links="repo_source /angular-ui/ui-utils/tree/gh-pages">Files</a></li>
    <li><a href="/angular-ui/ui-utils/commits/gh-pages" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_commits /angular-ui/ui-utils/commits/gh-pages">Commits</a></li>
    <li><a href="/angular-ui/ui-utils/branches" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_branches /angular-ui/ui-utils/branches" rel="nofollow">Branches <span class="counter ">2</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:6ca62dfc59d018a891183d824d59b9a9 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:6ca62dfc59d018a891183d824d59b9a9 -->

<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <a href="/angular-ui/ui-utils/find/gh-pages" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular-ui/ui-utils/tree/gh-pages" class="js-slide-to" data-branch="gh-pages" data-direction="back" itemscope="url"><span itemprop="title">ui-utils</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/angular-ui/ui-utils/tree/gh-pages/build" class="js-slide-to" data-branch="gh-pages" data-direction="back" itemscope="url"><span itemprop="title">build</span></a></span><span class="separator"> / </span><strong class="final-path">ui-utils.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="build/ui-utils.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
        </div>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/7644dc16702896486463e095a918d7b6?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><span rel="author">AngularUI (via TravisCI)</span></span>
    <time class="js-relative-date" datetime="2013-06-21T00:34:51-07:00" title="2013-06-21 00:34:51">June 21, 2013</time>
    <div class="commit-title">
        <a href="/angular-ui/ui-utils/commit/2ca294973bec5f94a013f17f54da8f1fa17c560e" class="message" data-pjax="true">Travis commit : build 101</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>0</strong> contributors</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/angular-ui/ui-utils/blob/2ca294973bec5f94a013f17f54da8f1fa17c560e/build/ui-utils.min.js" data-title="ui-utils/build/ui-utils.min.js at gh-pages · angular-ui/ui-utils · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="octicon octicon-file-text"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>7 lines (7 sloc)</span>
                <span>12.241 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/angular-ui/ui-utils/raw/gh-pages/build/ui-utils.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/angular-ui/ui-utils/blame/gh-pages/build/ui-utils.min.js" class="button minibutton ">Blame</a>
                  <a href="/angular-ui/ui-utils/commits/gh-pages/build/ui-utils.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)</span></div><div class='line' id='LC3'><span class="cm"> * @version v0.0.3 - 2013-06-21</span></div><div class='line' id='LC4'><span class="cm"> * @link http://angular-ui.github.com</span></div><div class='line' id='LC5'><span class="cm"> * @license MIT License, http://www.opensource.org/licenses/MIT</span></div><div class='line' id='LC6'><span class="cm"> */</span></div><div class='line' id='LC7'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.event&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiEvent&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiEvent</span><span class="p">);</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">$event</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">$params</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$$phase</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()})})}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.format&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;format&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">b</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\$([0-9]+)/g</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="k">else</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">return</span> <span class="nx">c</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.highlight&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;highlight&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;ui-match&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;gi&quot;</span><span class="p">),</span><span class="s1">&#39;&lt;span class=&quot;ui-match&quot;&gt;$&amp;&lt;/span&gt;&#39;</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.indeterminate&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiIndeterminate&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="s2">&quot;checkbox&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiIndeterminate</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">indeterminate</span><span class="o">=!!</span><span class="nx">a</span><span class="p">})}</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.inflector&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;inflector&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^([a-z])|\s+([a-z])/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">humanize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))},</span><span class="nx">underscore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">)},</span><span class="nx">variable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)).</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;humanize&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">](</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.jq&quot;</span><span class="p">,[]).</span><span class="nx">value</span><span class="p">(</span><span class="s2">&quot;uiJqConfig&quot;</span><span class="p">,{}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiJq&quot;</span><span class="p">,[</span><span class="s2">&quot;uiJqConfig&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="p">]))</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s1">&#39;ui-jq: The &quot;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="o">+</span><span class="s1">&#39;&quot; function does not exist&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="p">];</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiJq</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiOptions</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiOptions</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">])))</span><span class="o">:</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">]),</span><span class="nx">d</span><span class="p">.</span><span class="nx">ngModel</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;select,input,textarea&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;change&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">)}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiRefresh</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiRefresh</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">()}),</span><span class="nx">f</span><span class="p">()}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="mi">8</span><span class="o">:</span><span class="s2">&quot;backspace&quot;</span><span class="p">,</span><span class="mi">9</span><span class="o">:</span><span class="s2">&quot;tab&quot;</span><span class="p">,</span><span class="mi">13</span><span class="o">:</span><span class="s2">&quot;enter&quot;</span><span class="p">,</span><span class="mi">27</span><span class="o">:</span><span class="s2">&quot;esc&quot;</span><span class="p">,</span><span class="mi">32</span><span class="o">:</span><span class="s2">&quot;space&quot;</span><span class="p">,</span><span class="mi">33</span><span class="o">:</span><span class="s2">&quot;pageup&quot;</span><span class="p">,</span><span class="mi">34</span><span class="o">:</span><span class="s2">&quot;pagedown&quot;</span><span class="p">,</span><span class="mi">35</span><span class="o">:</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="mi">36</span><span class="o">:</span><span class="s2">&quot;home&quot;</span><span class="p">,</span><span class="mi">37</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="mi">38</span><span class="o">:</span><span class="s2">&quot;up&quot;</span><span class="p">,</span><span class="mi">39</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="mi">40</span><span class="o">:</span><span class="s2">&quot;down&quot;</span><span class="p">,</span><span class="mi">45</span><span class="o">:</span><span class="s2">&quot;insert&quot;</span><span class="p">,</span><span class="mi">46</span><span class="o">:</span><span class="s2">&quot;delete&quot;</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)};</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="s2">&quot;ui&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">)]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">expression</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">keys</span><span class="o">:</span><span class="p">{}},</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">i</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)})}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">),</span><span class="nx">f</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">altKey</span><span class="p">,</span><span class="nx">g</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="p">,</span><span class="nx">h</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">keyCode</span><span class="p">;</span><span class="s2">&quot;keypress&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&gt;=</span><span class="mi">97</span><span class="o">&amp;&amp;</span><span class="mi">122</span><span class="o">&gt;=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">-=</span><span class="mi">32</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">j</span><span class="p">]]</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">toString</span><span class="p">()],</span><span class="nx">k</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">meta</span><span class="p">,</span><span class="nx">l</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">alt</span><span class="p">,</span><span class="nx">m</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">ctrl</span><span class="p">,</span><span class="nx">n</span><span class="o">=!!</span><span class="nx">d</span><span class="p">.</span><span class="nx">keys</span><span class="p">.</span><span class="nx">shift</span><span class="p">;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">===</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">===</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">expression</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">$event</span><span class="o">:</span><span class="nx">a</span><span class="p">})})})})}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiKeydown&quot;</span><span class="p">,[</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiKeypress&quot;</span><span class="p">,[</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;keypress&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiKeyup&quot;</span><span class="p">,[</span><span class="s2">&quot;keypressHelper&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.mask&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiMask&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="mi">9</span><span class="o">:</span><span class="sr">/\d/</span><span class="p">,</span><span class="nx">A</span><span class="o">:</span><span class="sr">/[a-zA-Z]/</span><span class="p">,</span><span class="s2">&quot;*&quot;</span><span class="o">:</span><span class="sr">/[a-zA-Z0-9]/</span><span class="p">};</span><span class="k">return</span><span class="p">{</span><span class="nx">priority</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">K</span><span class="o">?</span><span class="p">(</span><span class="nx">j</span><span class="p">(),</span><span class="nx">k</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="p">())</span><span class="o">:</span><span class="nx">i</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="o">?</span><span class="p">(</span><span class="nx">D</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">D</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;mask&quot;</span><span class="p">,</span><span class="nx">F</span><span class="p">),</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">D</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="o">?</span><span class="p">(</span><span class="nx">D</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">D</span><span class="p">),</span><span class="nx">viewValue</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">D</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">=</span><span class="nx">viewValue</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;mask&quot;</span><span class="p">,</span><span class="nx">F</span><span class="p">),</span><span class="s2">&quot;&quot;</span><span class="o">===</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">$error</span><span class="p">.</span><span class="nx">required</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;required&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">F</span><span class="o">?</span><span class="nx">D</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(){</span><span class="k">return</span> <span class="nx">K</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">(),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">M</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">,</span><span class="nx">M</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">N</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">,</span><span class="nx">N</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeAttr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){</span><span class="nx">D</span><span class="o">=</span><span class="nx">H</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$modelValue</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="nx">G</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">D</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">D</span><span class="p">),</span><span class="nx">viewValue</span><span class="o">=</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">E</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxlength</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;maxlength&quot;</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">y</span><span class="p">[</span><span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;placeholder&quot;</span><span class="p">,</span><span class="nx">A</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">viewValue</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">=</span><span class="nx">viewValue</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="k">return</span> <span class="nx">L</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mousedown mouseup&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;input keyup click&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">L</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(){</span><span class="k">return</span> <span class="nx">L</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mousedown&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;keyup&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">),</span><span class="nx">L</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">C</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">())}),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">===</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">shift</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="o">+=</span><span class="nx">d</span><span class="p">}),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="p">[],</span><span class="nx">z</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">A</span><span class="o">+=</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="nx">z</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]),</span><span class="nx">c</span><span class="o">++</span><span class="p">,</span><span class="nx">d</span><span class="o">||</span><span class="nx">C</span><span class="o">++</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;?&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="nx">A</span><span class="o">+=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">++</span><span class="p">)})}</span><span class="nx">y</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">pop</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">B</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[_]+/g</span><span class="p">,</span><span class="s2">&quot;_&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([^_]+)([a-zA-Z0-9])([^_])/g</span><span class="p">,</span><span class="s2">&quot;$1$2_$3&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">),</span><span class="nx">K</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(){</span><span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="p">(</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}))}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;mousedown&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(){</span><span class="nx">J</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">16</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="mi">91</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">G</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">H</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">I</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="o">-</span><span class="nx">p</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">s</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">||</span><span class="nx">y</span><span class="p">.</span><span class="nx">slice</span><span class="p">().</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="nx">J</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">t</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">z</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">z</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">z</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">37</span><span class="o">&amp;&amp;</span><span class="mi">40</span><span class="o">&gt;=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="mi">37</span><span class="o">===</span><span class="nx">d</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="mi">8</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;keyup&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">===</span><span class="nx">q</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="mi">46</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;keyup&quot;</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="nx">q</span><span class="o">&amp;&amp;!</span><span class="nx">B</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="p">(</span><span class="nx">F</span><span class="o">||</span><span class="nx">K</span><span class="o">||</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">E</span><span class="o">||</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;keyup&quot;</span><span class="o">===</span><span class="nx">f</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="o">&amp;&amp;!</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">===</span><span class="nx">k</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">&amp;&amp;!</span><span class="nx">u</span><span class="p">(</span><span class="nx">m</span><span class="p">);)</span><span class="nx">m</span><span class="o">--</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">);)</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">N</span><span class="p">)</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">N</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">o</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">j</span><span class="p">)}),</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">&gt;=</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">--</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">s</span><span class="o">?</span><span class="nx">s</span><span class="o">:</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">?</span><span class="nx">r</span><span class="o">:</span><span class="nx">m</span><span class="p">;</span><span class="o">!</span><span class="nx">u</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">&gt;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">m</span><span class="p">;)</span><span class="nx">m</span><span class="o">+=</span><span class="nx">M</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">;(</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">||</span><span class="nx">C</span><span class="o">&amp;&amp;!</span><span class="nx">u</span><span class="p">(</span><span class="nx">p</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="o">++</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">m</span><span class="p">,</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">m</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">y</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">||</span><span class="mi">0</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSelectionRange</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">focus</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">setSelectionRange</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createTextRange</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">collapse</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveEnd</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">moveStart</span><span class="p">(</span><span class="s2">&quot;character&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">select</span><span class="p">()}}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionEnd</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectionStart</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">selection</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">text</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">}</span><span class="kd">var</span> <span class="nx">y</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">K</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">placeholder</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxlength</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;uiMask&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$formatters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mousedown mouseup&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">),</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">||</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">===</span><span class="k">this</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">Object</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;&gt;&gt;</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Number</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">d</span><span class="o">!==</span><span class="nx">d</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="o">:</span><span class="mi">0</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==-</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">)))),</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.reset&quot;</span><span class="p">,[]).</span><span class="nx">value</span><span class="p">(</span><span class="s2">&quot;uiResetConfig&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiReset&quot;</span><span class="p">,[</span><span class="s2">&quot;uiResetConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">),{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s1">&#39;&lt;a class=&quot;ui-reset&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">wrap</span><span class="p">(</span><span class="s1">&#39;&lt;span class=&quot;ui-resetwrap&quot; /&gt;&#39;</span><span class="p">).</span><span class="nx">after</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiReset</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiReset</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">$render</span><span class="p">()})})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.route&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiRoute&quot;</span><span class="p">,[</span><span class="s2">&quot;$location&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;AC&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiRoute</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;uiRoute&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">ngHref</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;ngHref&quot;</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">href</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;uiRoute missing a route or href property on &quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;href&quot;</span><span class="p">}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">){(</span><span class="nx">hash</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">))</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">hash</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">)},</span><span class="nx">j</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">){(</span><span class="nx">hash</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">))</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">hash</span><span class="o">+</span><span class="mi">1</span><span class="p">)),</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;^&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;$&quot;</span><span class="p">,[</span><span class="s2">&quot;i&quot;</span><span class="p">]);</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">path</span><span class="p">()))},</span><span class="nx">j</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">ngModel</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">routeModel</span><span class="o">||</span><span class="s2">&quot;$uiRoute&quot;</span><span class="p">).</span><span class="nx">assign</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;uiRoute&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">uiRoute</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">uiRoute</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;uiRoute&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;ngHref&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">ngHref</span><span class="o">?</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">ngHref</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="s2">&quot;ngHref&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;href&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">href</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$routeChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">()}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$stateChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">()})}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.scrollfix&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiScrollfix&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^?uiScrollfixTarget&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">$element</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;+&quot;</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)))</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;scroll.ui-scrollfix&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">&amp;&amp;</span><span class="s2">&quot;BackCompat&quot;</span><span class="o">!==</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">}</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">uiScrollfix</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-scrollfix&quot;</span><span class="p">)})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiScrollfixTarget&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">controller</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">$element</span><span class="o">=</span><span class="nx">a</span><span class="p">}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.showhide&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiShow&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiShow</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">)})}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiHide&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiHide</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">)})}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiToggle&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiToggle</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;ui-show&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ui-hide&quot;</span><span class="p">)})}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.unique&quot;</span><span class="p">,[]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;unique&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">))){</span><span class="nx">b</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">b</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.validate&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;uiValidate&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiValidate</span><span class="p">);</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">validator</span><span class="o">:</span><span class="nx">h</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">$value</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">then</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)},</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$formatters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiValidateWatch</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">uiValidateWatch</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)})})</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">](</span><span class="nx">d</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">)})})))}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;ui.utils&quot;</span><span class="p">,[</span><span class="s2">&quot;ui.event&quot;</span><span class="p">,</span><span class="s2">&quot;ui.format&quot;</span><span class="p">,</span><span class="s2">&quot;ui.highlight&quot;</span><span class="p">,</span><span class="s2">&quot;ui.indeterminate&quot;</span><span class="p">,</span><span class="s2">&quot;ui.inflector&quot;</span><span class="p">,</span><span class="s2">&quot;ui.jq&quot;</span><span class="p">,</span><span class="s2">&quot;ui.keypress&quot;</span><span class="p">,</span><span class="s2">&quot;ui.mask&quot;</span><span class="p">,</span><span class="s2">&quot;ui.reset&quot;</span><span class="p">,</span><span class="s2">&quot;ui.route&quot;</span><span class="p">,</span><span class="s2">&quot;ui.scrollfix&quot;</span><span class="p">,</span><span class="s2">&quot;ui.showhide&quot;</span><span class="p">,</span><span class="s2">&quot;ui.unique&quot;</span><span class="p">,</span><span class="s2">&quot;ui.validate&quot;</span><span class="p">]);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;">
            <button type="submit" class="button">Go</button>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif" height="64" width="64">
</div>


        </div>
      </div>
      <div class="modal-backdrop"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="/about">About us</a></dd>
        <dd><a href="/blog">Blog</a></dd>
        <dd><a href="/contact">Contact &amp; support</a></dd>
        <dd><a href="https://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="https://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="https://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="https://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="https://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.06472s from fe3.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>
    <ul id="legal">
        <li><a href="/site/terms">Terms of Service</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/angular-ui/ui-utils/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

    
    <span id='server_response_time' data-time='0.06516' data-host='fe3'></span>
    
  </body>
</html>

